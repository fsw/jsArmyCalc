<?xml version="1.0" encoding="utf-8"?>
<ruleset xmlns="armycalc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="armycalc http://armycalc.com/xmls/twr3info.xsd" version="3.0">
  
  <!--
  This have to be unique for every ruleset.
  Revision can be used by software to cehck if created army was made by older ruleset or so.
  you should always upgrate the revision number by one if you are publishing any changes
  -->
  <uid>armycalc.twr3.test01</uid>
  <revision>3</revision>
  
  <!--
  Definition of languages.
  This is an optional tag. You can write one-language rulesets
  Ifyou define this one language needs to be marked as default
  please se next section to see how this works
  -->
  <languages>
	<language id="pl">
		<name>Polski (polish)</name>
	</language>
	<language id="en" default='true'>
		<name>English</name>
	</language>
  </languages>
  
  <!--
  basic ruleset info. 
  please note how do languages work. 
  text outside the tr tag would be used for both languages
  if you will write simply <name>Blahblah</name> Blahblah would be used as name in each language
  -->
  <name>
	<tr ln="en">Example TWR 3.0</tr>
	<tr ln="pl">Przykładowy TWR 3.0</tr>
  </name>
  <author>francio</author>
  <description>
  	<tr ln="en">This is an example Ruleset. It shows the basic concepts of ArmyCalc and TWR 3.0</tr>
  	<tr ln="pl">Ten przykładowy zestaw zasad pokazuje jak działa ArmyCalc i TWR 3.0</tr>
  </description>
  
  <!--
  Ruleset icon.
  Not that all images can be passed inline as base64 encodeddata or loaded using src attribute
  -->
  <icon src="icon.png"></icon>
  
  <!--
  Stat fields that would bve possible to define for every element.
  The display attribute will make this stat shown on the default army list and in the editor
  -->
  <stats>
    <stat id="str" display="true">
      <name>strength</name>
	  <shortname>Str</shortname>
      <default>5</default>
    </stat>
    <stat id="sta" display="true">
      <name>stamina</name>
	  <shortname>Sta</shortname>
      <default>5</default>
    </stat>
    <stat id="spe" display="true">
      <name>speed</name>
      <shortname>Spe</shortname>
      <default>5</default>
    </stat>
    <stat id="hp" display="true">
      <name>hitpoints</name>
	  <name>HP</name>
      <shortname>HP</shortname>
      <default>10</default>
    </stat>
	<stat id="us">
      <name>unit size</name>
	  <name>US</name>
	  <shortname>US</shortname>
      <default>1</default>
    </stat>
  </stats>
 
  <!--
  Here we can define units that would be later on summed up when creating army. In most cases you will need only one unit.
  If you use <cost>10</cost> later on it would be interpreted as 10 of default unit( pts in this example )
  -->
  <costs>
	<cost id="pts" default="true">
	  <name>Points</name>
	  <shortname>pts</shortname>
	  <unit>pts</unit>
	  <default>0</default>
	</cost>
	<cost id="gc">
	  <name>Gold Coins</name>
	  <shortname>GC</shortname>
	  <unit>coins</unit>
	  <default>0</default>
	</cost>
  </costs>
  

  <!--
  here we can optionally define what would be set as default in an army creation dialog.
  -->
  <defaultArmyName>
	<tr ln="en">Army</tr>
	<tr ln="pl">Armia</tr>	
  </defaultArmyName>
 
  <defaultArmySize>
	<cost id="pts">1500</cost>
	<cost id="gold">10</cost>
  </defaultArmySize>


  <mainmenu>
	<menu id="menu-core-units">
	  <name>
		<tr ln="en">Core units</tr>
		<tr ln="pl">Jednostki podstawowe</tr>	
	  </name>
	  <menu id="menu-infantry-units">
		<name>
		  <tr ln="en">Infantry</tr>
		  <tr ln="pl">Piechota</tr>	
		</name>
	  </menu>
	  <menu id="menu-cavalry-units">
		<name>
		  <tr ln="en">Cavalry</tr>
		  <tr ln="pl">Kawaleria</tr>	
		</name>
	  </menu>
	</menu>
	<menu id="menu-special-units">
	  <name>
	  	<tr ln="en">Special units</tr>
		<tr ln="pl">Jednostki specjalne</tr>	
	  </name>
	</menu>
	<menu id="menu-heroes-units">
	  <name>
		<tr ln="en">Heroes</tr>
		<tr ln="pl">Bohaterowie</tr>
	  </name>
	</menu>
  </mainmenu>
  
  <errors>
	<error class="error">
	  <uid>heroes-warriors-wrong-count</uid>
	  <message>
		<tr ln="en">Army can have only 1 hero for each 3 warriors units.</tr>
		<tr ln="pl">Armia może zawierać tylko jednego Bohatera na każde trzy oddziały wojowników.</tr>
	  </message>
	</error>
	<error class="warning">
	  <uid>test-error</uid>
	  <message>
		<tr ln="en">This warning is issued in every validation and there is nothing you can do about it.</tr>
		<tr ln="pl">To ostrzeżenie pojawia się przy każdej walidacji i nie da się tego zmienić.</tr>
	  </message>
	</error>
  </errors>
  <!--
  This will be shown in a select dialog when creating new army.
  You can check which model was selected using your validation script 
  and make a special set of rules for a tuornament or so.
  You can write totally different validation script for a model 
  but you can check selected model inside the validation script as well.
  You need to define atleast one model.
  note that models can optionally override tags: defaultArmyName and defaultArmySize
  -->
  <models>
	<model id="m2" default='true'>
		<name>Default Model</name>
		<elements src="core_units.xml"></elements>
		<elements src="special_units.xml"></elements>
		<elements src="heroes.xml"></elements>
		<elements src="magic_items.xml"></elements>
		<validator src="validator.js"></validator>
	</model>
   	<model id="m1">
		<name>
		  <tr ln="en">Tournament model</tr>
		  <tr ln="pl">Model turniejowy</tr>	
		</name>
		<defaultArmyName>
		  <tr ln="en">Tournament army</tr>
		  <tr ln="pl">Armia turniejowa</tr>	
		</defaultArmyName>
		<elements src="core_units.xml"></elements>
		<elements src="special_units.xml"></elements>
		<elements src="tournament_heroes.xml"></elements>	
		<elements src="magic_items.xml"></elements>
		<validator src="validator.js"></validator>
	</model>
  </models>

</ruleset>
